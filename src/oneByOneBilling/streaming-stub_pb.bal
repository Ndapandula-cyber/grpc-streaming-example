import ballerina/grpc;

public type BillingServerClient client object {

    *grpc:AbstractClientEndpoint;

    private grpc:Client grpcClient;

    public function __init(string url, grpc:ClientConfiguration? config = ()) {
        // initialize client endpoint.
        self.grpcClient = new(url, config);
        checkpanic self.grpcClient.initStub(self, "non-blocking", ROOT_DESCRIPTOR, getDescriptorMap());
    }

    public remote function quickBilling(service msgListener, grpc:Headers? headers = ()) returns (grpc:StreamingClient|grpc:Error) {
        return self.grpcClient->streamingExecute("service.BillingServer/quickBilling", msgListener, headers);
    }
    public remote function oneByOneBilling(service msgListener, grpc:Headers? headers = ()) returns (grpc:StreamingClient|grpc:Error) {
        return self.grpcClient->streamingExecute("service.BillingServer/oneByOneBilling", msgListener, headers);
    }
};

public type InputValue record {|
    string itemName = "";
    int quantity = 0;
    float price = 0.0;
    
|};


public type Bill record {|
    string billType = "";
    int totalQuantity = 0;
    float totalPrice = 0.0;
    
|};



const string
function getDescriptorMap() returns map<string> {
    return {
        "streaming-stub.proto
        
    };
}

